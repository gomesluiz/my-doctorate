reticulate::repl_python()
install.packages("styler")
styler:::set_style_transformers()
1
styler:::style_active_file()
m <- c('laranja', 'maca')
names(m) <- m
m['laranja']
'laranja' %in% m
'abacaxi' %in% m
!'abacaxi' %in% m
!('abacaxi' %in% m)
flog.trace("Testing model: ")
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search_all_by_features.R')
library(futile.logger)
flog.trace("este\nteste")
flog.threshold(TRACE)
flog.trace("este\nteste")
set.seed(144)
true_class <- factor(sample(paste0("Class", 1: 2),
size = 1000,
prob = c(.2, .8),
replace = TRUE))
true_class
class1_probs  <- rbeta(sum(true_class=="Class1"), 4, 1)
class1_probs
true_class <- factor(sample(paste0("Class", 1: 2),
size = 1000,
prob = c(.2, .8),
replace = TRUE))
class2_probs
source('~/Workspace/metrics.R')
class2_probs
source('~/Workspace/metrics.R')
test_set
confusionMatrix(data=test_set$pred, reference = test_set$obs)
source('~/Workspace/metrics.R')
source('~/Workspace/metrics.R')
test_set$Class2 <- 1 - test_set$Class1
source('~/Workspace/metrics.R')
source('~/Workspace/metrics.R')
cm
source('~/Workspace/metrics.R')
cm
sensitivity(cm)
sensitivity(data = test_set$pred, reference = test_set$obs)
sensitivity(data = test_set$pred, reference = test_set$obs, positive = "Class2")
specificity(data = test_set$pred, reference = test_set$obs, positive = "Class2")
specificity(data = test_set$pred, reference = test_set$obs, positive = "Class2")
specificity(data = test_set$pred, reference = test_set$obs, positive = "Class2")
precision(data = test_set$pred, reference = test_set$obs, positive = "Class2")
recall(data = test_set$pred, reference = test_set$obs, positive = "Class2")
F_meas(data = test_set$pred, reference = test_set$obs, positive = "Class2")
specificity(data = test_set$pred, reference = test_set$obs, positive = "Class2")
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search_all_by_features.R')
prediction_balanced_acc
source('~/Workspace/metrics.R')
cm
cm$table
cm$table[["Class1"]]
cm$table["Class1"]
cm$table[1,1]
cm
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search_all_by_features.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search_all_by_features.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search_all_by_features.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search_all_by_features.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search_all_by_features.R')
cm
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search_all_by_features.R')
cm
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search_all_by_features.R')
cm
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_w_grid_search_all_by_features.R')
install.packages("smotefamily")
install.packages("ranger")
source('~/Workspace/doctorate/long-lived-bug-prediction/R/pre_process_data_e1.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/pre_process_data_e1.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/pre_process_data_e1.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/pre_process_data_e1.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_e1.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_e1.R')
reports.dataset
table(reports.dataset$long_lived)
View(reports.dataset)
balance_dataset()
balanced.dataset
X_train
reports.dataset[, c("bug_fix_time")]
reports.dataset[, -c("bug_fix_time")]
reports.dataset[, !c("bug_fix_time")]
reports.dataset[, !c("bug_fix_time")]
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_e1.R')
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_e1.R')
parameters
c(c('x', 'y'), 'z')
balanced.dataset
table(balanced.dataset$long_lived)
source('~/Workspace/doctorate/long-lived-bug-prediction/R/predict_long_lived_bug_e1.R')
