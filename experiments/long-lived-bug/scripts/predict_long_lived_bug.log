Loading required package: caret
Loading required package: lattice
Loading required package: ggplot2
Loading required package: futile.logger
Loading required package: klaR
Loading required package: MASS
Loading required package: doParallel
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
Loading required package: qdap
Loading required package: qdapDictionaries
Loading required package: qdapRegex

Attaching package: ‘qdapRegex’

The following object is masked from ‘package:ggplot2’:

    %+%

Loading required package: qdapTools
Loading required package: RColorBrewer

Attaching package: ‘qdap’

The following object is masked from ‘package:base’:

    Filter

Warning message:
package ‘qdap’ was built under R version 3.5.2 
Loading required package: SnowballC
Loading required package: tidyverse
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ tibble  2.0.0     ✔ purrr   0.2.5
✔ tidyr   0.8.2     ✔ dplyr   0.7.8
✔ readr   1.3.1     ✔ stringr 1.3.1
✔ tibble  2.0.0     ✔ forcats 0.3.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ qdapRegex::%+%()    masks ggplot2::%+%()
✖ purrr::accumulate() masks foreach::accumulate()
✖ dplyr::explain()    masks qdapRegex::explain()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::id()         masks qdapTools::id()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::lift()       masks caret::lift()
✖ dplyr::select()     masks MASS::select()
✖ purrr::when()       masks foreach::when()
Warning message:
package ‘tibble’ was built under R version 3.5.2 
Loading required package: tidytext
Loading required package: tm
Loading required package: NLP

Attaching package: ‘NLP’

The following object is masked from ‘package:qdap’:

    ngrams

The following object is masked from ‘package:ggplot2’:

    annotate


Attaching package: ‘tm’

The following objects are masked from ‘package:qdap’:

    as.DocumentTermMatrix, as.TermDocumentMatrix

Loading required package: smotefamily
NULL
TRACE [2019-02-13 23:59:39] Script started...
TRACE [2019-02-13 23:59:40] Ouput path: ~/Workspace/doctorate/experiments/long-lived-bug/notebooks/datasets
TRACE [2019-02-13 23:59:40] Bug reports file : ~/Workspace/doctorate/experiments/long-lived-bug/notebooks/datasets/20190207_eclipse_bug_reports.csv
TRACE [2019-02-13 23:59:40] Last evaluation file generated: ~/Workspace/doctorate/experiments/long-lived-bug/notebooks/datasets/20190213110244-predicting-metrics.csv
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-13 23:59:41] Starting with parameter: 9
Parsed with column specification:
cols(
  bug_id = col_character(),
  creation_date = col_date(format = ""),
  component_name = col_character(),
  product_name = col_character(),
  short_description = col_character(),
  long_description = col_character(),
  assignee_name = col_character(),
  reporter_name = col_character(),
  resolution_category = col_character(),
  resolution_code = col_double(),
  status_category = col_character(),
  status_code = col_double(),
  update_date = col_date(format = ""),
  quantity_of_votes = col_double(),
  quantity_of_comments = col_double(),
  resolution_date = col_date(format = ""),
  days_to_resolve = col_double(),
  severity_category = col_character(),
  severity_code = col_double()
)
Warning: 1 parsing failure.
  row              col expected        actual                                                                                                   file
10423 long_description          embedded null '~/Workspace/doctorate/experiments/long-lived-bug/notebooks/datasets/20190207_eclipse_bug_reports.csv'

TRACE [2019-02-13 23:59:41] Clean text features
TRACE [2019-02-14 00:00:57] Text mining: extracting 200 terms
TRACE [2019-02-14 00:02:09] Predicting: feature[short_long_description], threshold[12], classifier[knn], resampling[boot], balancing[custom]
TRACE [2019-02-14 00:02:09] Balancing dataset
TRACE [2019-02-14 00:02:09] Balancing: custom
TRACE [2019-02-14 00:02:09] Partitioning dataset
TRACE [2019-02-14 00:02:09] Training model: 
TRACE [2019-02-14 00:02:09] Resampling: boot
TRACE [2019-02-14 00:19:28] Testing model: 
TRACE [2019-02-14 00:19:46] Evaluating: Bcc [0.512956], Acc0 [0.549774], Acc1 [0.476139]
TRACE [2019-02-14 00:19:46] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 00:19:46] Predicting: feature[short_long_description], threshold[12], classifier[knn], resampling[boot], balancing[downsample]
TRACE [2019-02-14 00:19:46] Balancing dataset
TRACE [2019-02-14 00:19:46] Balancing: downsample
TRACE [2019-02-14 00:19:46] Partitioning dataset
TRACE [2019-02-14 00:19:46] Training model: 
TRACE [2019-02-14 00:19:46] Resampling: boot
TRACE [2019-02-14 00:38:46] Testing model: 
TRACE [2019-02-14 00:39:04] Evaluating: Bcc [0.512956], Acc0 [0.549774], Acc1 [0.476139]
TRACE [2019-02-14 00:39:04] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 00:39:05] Predicting: feature[short_long_description], threshold[12], classifier[knn], resampling[boot], balancing[smote]
TRACE [2019-02-14 00:39:05] Balancing dataset
TRACE [2019-02-14 00:39:05] Balancing: smote
TRACE [2019-02-14 00:39:40] Partitioning dataset
TRACE [2019-02-14 00:39:40] Training model: 
TRACE [2019-02-14 00:39:40] Resampling: boot
TRACE [2019-02-14 01:53:27] Testing model: 
TRACE [2019-02-14 01:53:48] Evaluating: Bcc [0.595065], Acc0 [0.736409], Acc1 [0.453721]
TRACE [2019-02-14 01:53:48] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 01:53:49] Predicting: feature[short_long_description], threshold[12], classifier[knn], resampling[boot], balancing[unbalanced]
TRACE [2019-02-14 01:53:49] Balancing dataset
TRACE [2019-02-14 01:53:49] Balancing: unbalanced
TRACE [2019-02-14 01:53:49] Partitioning dataset
TRACE [2019-02-14 01:53:49] Training model: 
TRACE [2019-02-14 01:53:49] Resampling: boot
TRACE [2019-02-14 02:35:45] Testing model: 
TRACE [2019-02-14 02:36:03] Evaluating: Bcc [0.654056], Acc0 [0.700060], Acc1 [0.608051]
TRACE [2019-02-14 02:36:03] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 02:36:03] Predicting: feature[short_long_description], threshold[16], classifier[knn], resampling[boot], balancing[custom]
TRACE [2019-02-14 02:36:03] Balancing dataset
TRACE [2019-02-14 02:36:03] Balancing: custom
TRACE [2019-02-14 02:36:04] Partitioning dataset
TRACE [2019-02-14 02:36:04] Training model: 
TRACE [2019-02-14 02:36:04] Resampling: boot
TRACE [2019-02-14 02:52:31] Testing model: 
TRACE [2019-02-14 02:52:47] Evaluating: Bcc [0.508430], Acc0 [0.529412], Acc1 [0.487448]
TRACE [2019-02-14 02:52:47] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 02:52:47] Predicting: feature[short_long_description], threshold[16], classifier[knn], resampling[boot], balancing[downsample]
TRACE [2019-02-14 02:52:47] Balancing dataset
TRACE [2019-02-14 02:52:47] Balancing: downsample
TRACE [2019-02-14 02:52:47] Partitioning dataset
TRACE [2019-02-14 02:52:47] Training model: 
TRACE [2019-02-14 02:52:47] Resampling: boot
TRACE [2019-02-14 03:09:16] Testing model: 
TRACE [2019-02-14 03:09:33] Evaluating: Bcc [0.508430], Acc0 [0.529412], Acc1 [0.487448]
TRACE [2019-02-14 03:09:33] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 03:09:33] Predicting: feature[short_long_description], threshold[16], classifier[knn], resampling[boot], balancing[smote]
TRACE [2019-02-14 03:09:33] Balancing dataset
TRACE [2019-02-14 03:09:33] Balancing: smote
TRACE [2019-02-14 03:10:04] Partitioning dataset
TRACE [2019-02-14 03:10:04] Training model: 
TRACE [2019-02-14 03:10:04] Resampling: boot
TRACE [2019-02-14 04:27:36] Testing model: 
TRACE [2019-02-14 04:28:02] Evaluating: Bcc [0.620183], Acc0 [0.771615], Acc1 [0.468750]
TRACE [2019-02-14 04:28:02] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 04:28:02] Predicting: feature[short_long_description], threshold[16], classifier[knn], resampling[boot], balancing[unbalanced]
TRACE [2019-02-14 04:28:02] Balancing dataset
TRACE [2019-02-14 04:28:02] Balancing: unbalanced
TRACE [2019-02-14 04:28:02] Partitioning dataset
TRACE [2019-02-14 04:28:02] Training model: 
TRACE [2019-02-14 04:28:02] Resampling: boot
TRACE [2019-02-14 05:11:49] Testing model: 
TRACE [2019-02-14 05:12:01] Evaluating: Bcc [0.674371], Acc0 [0.708009], Acc1 [0.640732]
TRACE [2019-02-14 05:12:02] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 05:12:02] Predicting: feature[short_long_description], threshold[20], classifier[knn], resampling[boot], balancing[custom]
TRACE [2019-02-14 05:12:02] Balancing dataset
TRACE [2019-02-14 05:12:02] Balancing: custom
TRACE [2019-02-14 05:12:02] Partitioning dataset
TRACE [2019-02-14 05:12:02] Training model: 
TRACE [2019-02-14 05:12:02] Resampling: boot
TRACE [2019-02-14 05:28:24] Testing model: 
TRACE [2019-02-14 05:28:42] Evaluating: Bcc [0.512138], Acc0 [0.546485], Acc1 [0.477790]
TRACE [2019-02-14 05:28:42] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 05:28:42] Predicting: feature[short_long_description], threshold[20], classifier[knn], resampling[boot], balancing[downsample]
TRACE [2019-02-14 05:28:42] Balancing dataset
TRACE [2019-02-14 05:28:42] Balancing: downsample
TRACE [2019-02-14 05:28:42] Partitioning dataset
TRACE [2019-02-14 05:28:42] Training model: 
TRACE [2019-02-14 05:28:42] Resampling: boot
TRACE [2019-02-14 05:45:00] Testing model: 
TRACE [2019-02-14 05:45:16] Evaluating: Bcc [0.512138], Acc0 [0.546485], Acc1 [0.477790]
TRACE [2019-02-14 05:45:16] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 05:45:16] Predicting: feature[short_long_description], threshold[20], classifier[knn], resampling[boot], balancing[smote]
TRACE [2019-02-14 05:45:16] Balancing dataset
TRACE [2019-02-14 05:45:16] Balancing: smote
TRACE [2019-02-14 05:45:48] Partitioning dataset
TRACE [2019-02-14 05:45:48] Training model: 
TRACE [2019-02-14 05:45:48] Resampling: boot
TRACE [2019-02-14 07:06:39] Testing model: 
TRACE [2019-02-14 07:07:05] Evaluating: Bcc [0.612022], Acc0 [0.737921], Acc1 [0.486123]
TRACE [2019-02-14 07:07:05] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 07:07:06] Predicting: feature[short_long_description], threshold[20], classifier[knn], resampling[boot], balancing[unbalanced]
TRACE [2019-02-14 07:07:06] Balancing dataset
TRACE [2019-02-14 07:07:06] Balancing: unbalanced
TRACE [2019-02-14 07:07:06] Partitioning dataset
TRACE [2019-02-14 07:07:06] Training model: 
TRACE [2019-02-14 07:07:06] Resampling: boot
TRACE [2019-02-14 07:52:45] Testing model: 
TRACE [2019-02-14 07:52:55] Evaluating: Bcc [0.689847], Acc0 [0.715072], Acc1 [0.664622]
TRACE [2019-02-14 07:52:55] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 07:52:55] Predicting: feature[short_long_description], threshold[24], classifier[knn], resampling[boot], balancing[custom]
TRACE [2019-02-14 07:52:55] Balancing dataset
TRACE [2019-02-14 07:52:55] Balancing: custom
TRACE [2019-02-14 07:52:56] Partitioning dataset
TRACE [2019-02-14 07:52:56] Training model: 
TRACE [2019-02-14 07:52:56] Resampling: boot
TRACE [2019-02-14 08:09:23] Testing model: 
TRACE [2019-02-14 08:09:40] Evaluating: Bcc [0.504626], Acc0 [0.516667], Acc1 [0.492585]
TRACE [2019-02-14 08:09:40] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 08:09:40] Predicting: feature[short_long_description], threshold[24], classifier[knn], resampling[boot], balancing[downsample]
TRACE [2019-02-14 08:09:40] Balancing dataset
TRACE [2019-02-14 08:09:40] Balancing: downsample
TRACE [2019-02-14 08:09:40] Partitioning dataset
TRACE [2019-02-14 08:09:40] Training model: 
TRACE [2019-02-14 08:09:40] Resampling: boot
TRACE [2019-02-14 08:26:06] Testing model: 
TRACE [2019-02-14 08:26:23] Evaluating: Bcc [0.504626], Acc0 [0.516667], Acc1 [0.492585]
TRACE [2019-02-14 08:26:23] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 08:26:23] Predicting: feature[short_long_description], threshold[24], classifier[knn], resampling[boot], balancing[smote]
TRACE [2019-02-14 08:26:23] Balancing dataset
TRACE [2019-02-14 08:26:23] Balancing: smote
TRACE [2019-02-14 08:26:56] Partitioning dataset
TRACE [2019-02-14 08:26:56] Training model: 
TRACE [2019-02-14 08:26:56] Resampling: boot
TRACE [2019-02-14 09:48:59] Testing model: 
TRACE [2019-02-14 09:49:14] Evaluating: Bcc [0.614985], Acc0 [0.732337], Acc1 [0.497632]
TRACE [2019-02-14 09:49:14] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 09:49:15] Predicting: feature[short_long_description], threshold[24], classifier[knn], resampling[boot], balancing[unbalanced]
TRACE [2019-02-14 09:49:15] Balancing dataset
TRACE [2019-02-14 09:49:15] Balancing: unbalanced
TRACE [2019-02-14 09:49:15] Partitioning dataset
TRACE [2019-02-14 09:49:15] Training model: 
TRACE [2019-02-14 09:49:15] Resampling: boot
TRACE [2019-02-14 10:39:37] Testing model: 
TRACE [2019-02-14 10:39:53] Evaluating: Bcc [0.709257], Acc0 [0.715317], Acc1 [0.703196]
TRACE [2019-02-14 10:39:53] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 10:39:53] Predicting: feature[short_long_description], threshold[28], classifier[knn], resampling[boot], balancing[custom]
TRACE [2019-02-14 10:39:53] Balancing dataset
TRACE [2019-02-14 10:39:53] Balancing: custom
TRACE [2019-02-14 10:39:53] Partitioning dataset
TRACE [2019-02-14 10:39:53] Training model: 
TRACE [2019-02-14 10:39:53] Resampling: boot
TRACE [2019-02-14 10:58:00] Testing model: 
TRACE [2019-02-14 10:58:18] Evaluating: Bcc [0.503604], Acc0 [0.517034], Acc1 [0.490173]
TRACE [2019-02-14 10:58:18] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 10:58:18] Predicting: feature[short_long_description], threshold[28], classifier[knn], resampling[boot], balancing[downsample]
TRACE [2019-02-14 10:58:18] Balancing dataset
TRACE [2019-02-14 10:58:18] Balancing: downsample
TRACE [2019-02-14 10:58:19] Partitioning dataset
TRACE [2019-02-14 10:58:19] Training model: 
TRACE [2019-02-14 10:58:19] Resampling: boot
TRACE [2019-02-14 11:14:42] Testing model: 
TRACE [2019-02-14 11:15:01] Evaluating: Bcc [0.503604], Acc0 [0.517034], Acc1 [0.490173]
TRACE [2019-02-14 11:15:01] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 11:15:01] Predicting: feature[short_long_description], threshold[28], classifier[knn], resampling[boot], balancing[smote]
TRACE [2019-02-14 11:15:01] Balancing dataset
TRACE [2019-02-14 11:15:01] Balancing: smote
TRACE [2019-02-14 11:15:37] Partitioning dataset
TRACE [2019-02-14 11:15:37] Training model: 
TRACE [2019-02-14 11:15:37] Resampling: boot
TRACE [2019-02-14 12:46:43] Testing model: 
TRACE [2019-02-14 12:47:45] Evaluating: Bcc [0.627349], Acc0 [0.761606], Acc1 [0.493092]
TRACE [2019-02-14 12:47:45] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 12:47:45] Predicting: feature[short_long_description], threshold[28], classifier[knn], resampling[boot], balancing[unbalanced]
TRACE [2019-02-14 12:47:45] Balancing dataset
TRACE [2019-02-14 12:47:45] Balancing: unbalanced
TRACE [2019-02-14 12:47:45] Partitioning dataset
TRACE [2019-02-14 12:47:45] Training model: 
TRACE [2019-02-14 12:47:45] Resampling: boot
TRACE [2019-02-14 13:43:36] Testing model: 
TRACE [2019-02-14 13:44:21] Evaluating: Bcc [0.711069], Acc0 [0.722973], Acc1 [0.699164]
TRACE [2019-02-14 13:44:21] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 13:44:21] Predicting: feature[short_long_description], threshold[32], classifier[knn], resampling[boot], balancing[custom]
TRACE [2019-02-14 13:44:21] Balancing dataset
TRACE [2019-02-14 13:44:21] Balancing: custom
TRACE [2019-02-14 13:44:21] Partitioning dataset
TRACE [2019-02-14 13:44:21] Training model: 
TRACE [2019-02-14 13:44:21] Resampling: boot
TRACE [2019-02-14 14:02:52] Testing model: 
TRACE [2019-02-14 14:03:12] Evaluating: Bcc [0.508461], Acc0 [0.533333], Acc1 [0.483589]
TRACE [2019-02-14 14:03:12] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 14:03:12] Predicting: feature[short_long_description], threshold[32], classifier[knn], resampling[boot], balancing[downsample]
TRACE [2019-02-14 14:03:12] Balancing dataset
TRACE [2019-02-14 14:03:12] Balancing: downsample
TRACE [2019-02-14 14:03:12] Partitioning dataset
TRACE [2019-02-14 14:03:12] Training model: 
TRACE [2019-02-14 14:03:12] Resampling: boot
TRACE [2019-02-14 14:21:17] Testing model: 
TRACE [2019-02-14 14:22:10] Evaluating: Bcc [0.508461], Acc0 [0.533333], Acc1 [0.483589]
TRACE [2019-02-14 14:22:10] Recording evaluation results on CSV file.
Parsed with column specification:
cols(
  .default = col_double(),
  dataset = col_character(),
  classifier = col_character(),
  resampling = col_character(),
  balancing = col_character(),
  feature = col_character()
)
See spec(...) for full column specifications.
TRACE [2019-02-14 14:22:10] Predicting: feature[short_long_description], threshold[32], classifier[knn], resampling[boot], balancing[smote]
TRACE [2019-02-14 14:22:10] Balancing dataset
TRACE [2019-02-14 14:22:10] Balancing: smote
TRACE [2019-02-14 14:23:00] Partitioning dataset
TRACE [2019-02-14 14:23:00] Training model: 
TRACE [2019-02-14 14:23:00] Resampling: boot
